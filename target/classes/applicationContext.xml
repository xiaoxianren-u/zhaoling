<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--            包扫描-->
    <context:component-scan base-package="com.edu.service com.edu.Websocket"/>
    <context:component-scan base-package="com.edu.dao"/>


    <!--    数据库连接池以及事物管理都交给Spring容器来做-->
    <!--        引入外部资源文件-->
    <context:property-placeholder location="classpath:mysql.properties"/>
    <!--    第三方jar中的bean定义在xml中-->
    <bean id="stu" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--            事务处理-->
    <bean id="transa" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="stu"/>
    </bean>
    <!--事务管理注解驱动-->
    <tx:annotation-driven transaction-manager="transa"/>

    <!--    SqlSessionFactory对象应该放在Spring容器中为单例对象管理
            原来mybatis中sqlSessionFactory的构造需要素材的：SqlMaprConfig.xml中的内容
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--            别名映射扫射-->
        <property name="typeHandlersPackage" value="com.edu.pojo"/>
        <!--            数据源-->
        <property name="dataSource" ref="stu"/>
    </bean>
    <!--    Mapper动态代理对象交给Spring管理，我们从Spring容器中直接获得Mapeer的代理-->
    <!--    扫描mapper接口，生成代理对象，生成的代理对象会存储在ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--        dao接口包路径配置-->
        <property name="basePackage" value="com.edu.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>